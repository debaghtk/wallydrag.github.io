<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>devops on Debashish Ghatak</title>
    <link>http://wallydrag.github.io/tags/devops/</link>
    <description>Recent content in devops on Debashish Ghatak</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Sun, 29 Nov 2015 01:53:52 +0530</lastBuildDate>
    
	<atom:link href="http://wallydrag.github.io/tags/devops/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Continuous Delivery Continuous Deployment and Continuous Integration Whats the Difference</title>
      <link>http://wallydrag.github.io/posts/continous-delivery-continous-deployment-and-continous-integration-whats-the-difference/</link>
      <pubDate>Sun, 29 Nov 2015 01:53:52 +0530</pubDate>
      
      <guid>http://wallydrag.github.io/posts/continous-delivery-continous-deployment-and-continous-integration-whats-the-difference/</guid>
      <description>Continuous delivery, continuous deployment and continuous integration are three words that you might be hearing regularly these days. I was initially confused as they seemed pretty similar to me and I bet half of the crowd are confused too. So I put on my superhero mask and googled the three :D
Turns out, these three, while being really similar and related to each other as well, have pretty subtle differences.</description>
    </item>
    
    <item>
      <title>Ansible</title>
      <link>http://wallydrag.github.io/posts/ansible/</link>
      <pubDate>Wed, 11 Nov 2015 01:53:33 +0530</pubDate>
      
      <guid>http://wallydrag.github.io/posts/ansible/</guid>
      <description>Imagine a situation where you have two machines, where one is your workstation. Let&amp;rsquo;s call it the management node. The other one is a fresh ubuntu/centos machine which can be bare metal physical box or a cloud instance. Let&amp;rsquo;s say you have to configure this machine into a apache or nginx web server.
One way to go about this would be to manually ssh into the machine, install the necessary packages and editing the configuration files.</description>
    </item>
    
  </channel>
</rss>